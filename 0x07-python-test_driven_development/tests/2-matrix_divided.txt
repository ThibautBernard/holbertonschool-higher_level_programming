The ``2-matrix_divided`` module
======================
Import:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Tests:

two list of lists and int
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

no int passed to div
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]]))
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

string passed to div
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], "ddzdz"))
Traceback (most recent call last):
TypeError: div must be a number

a list in a list with less number than other
>>> print(matrix_divided([[1, 2, 3], [4, 6]], 3))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

zero passed to div
>>> print(matrix_divided([[1, 2, 3], [4, 3, 6]], 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

no list of lists passed but string
>>> print(matrix_divided("dzdz", 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

a string in list of lists
>>> print(matrix_divided([[1, 2, "dd"], [4, 6]], 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

a list in a list with less number than other
>>> print(matrix_divided([[2, 4], [4]], 3))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

float in list of lists
>>> print(matrix_divided([[5.4, 4], [7.5, 3]], 3))
[[1.8, 1.33], [2.5, 1.0]]

Zero passed in list of lists
>>> print(matrix_divided([[0, 4], [7.5, 3]], 3))
Traceback (most recent call last):
ZeroDivisionError: division by zero

Zero passed in list of lists
>>> print(matrix_divided([[1, 4], [0, 3]], 3))
Traceback (most recent call last):
ZeroDivisionError: division by zero

Zero passed in list of lists
>>> print(matrix_divided([[1, 4], [4, 0]], 3))
Traceback (most recent call last):
ZeroDivisionError: division by zero

Zero passed in div
>>> print(matrix_divided([[1, 4], [4, 0]], 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

Negative number
>>> print(matrix_divided([[-2], [-3]], 2))
[[-1.0], [-1.5]]

Negative number in div
>>> print(matrix_divided([[2], [3]], -5))
[[-0.4], [-0.6]]

only one list in list with negative number
>>> print(matrix_divided([[2]], -5))
[[-0.4]]

No list of lists passed
>>> print(matrix_divided(None, -5))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

None in list of lists
>>> print(matrix_divided([[None]], -5))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

None in list of lists
>>> print(matrix_divided([[None, None]], -5))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

None in list of lists
>>> print(matrix_divided([[12, None]], -5))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats


"""
